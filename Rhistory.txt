data <- read.csv('who_suicide_statistics.csv', sep = ",")
library(readr)
who_suicide_statistics <- read_csv("OneDrive/Documents/Data101-Code/who_suicide_statistics.csv")
View(who_suicide_statistics)
data <- read.csv('who_suicide_statistics.csv', sep = ",")
data <- read.csv('who_suicide_statistics.csv', sep = ",")
data <- read.csv('./who_suicide_statistics.csv', sep = ",")
View(who_suicide_statistics)
library(readr)
data <- read.csv('who_suicide_statistics.csv', sep = ",")
data <- who_suicide_statistics
# If you need to import data set then set data <- who_suicide_statistics
# Plot One
unitedStatesFemale <- data[data$country=="United States of America" & data$sex == "female" & data$age == "15-24 years",]
unitedStatesMale <- data[data$country=="United States of America" & data$sex == "male" & data$age == "15-24 years",]
par(mfrow=c(1,2))
plot (unitedStatesFemale$year,unitedStatesFemale$suicides_no, type="l", xlab = "Year", ylab = "Number of Suicides", col="red", ylim = range(c(0,4500)) )
title ("Female", line = 1, col.main= "red")
plot(unitedStatesFemale$year,unitedStatesMale$suicides_no, type="l", col="blue", xlab = "Year", ylab = "Number of Suicides", ylim = range(c(0,4500)) )
title ("Male", line = 1, col.main= "blue")
title("Number of Suicides between ages 15 and 24 in the U.S.", outer = TRUE, line=-1)
par(mfrow=c(1,1))
# Plot Two
unitedStatesAgeFemale <- data[data$country=="United States of America" & data$sex == "female" & data$year == "2015",]
barplot(unitedStatesAgeFemale$suicides_no, names.arg = c("15-24 years", "25-34 years","35-54 years", "5-14 years", "55-74 years", "75+ years"), col=c("darkblue","red", "orange", "blue", "green", "yellow"), main= "Number of Female Suicides in the United States in 2015", ylab = "Number of Suicides")
# Plot Three
year2015 <- data[data$suicides_no > 400 & data$year == "2015" & data$age == "25-34 years" & data$sex == "male" & !is.na(data$suicides_no), ]
library(plotrix)
label <- round(year2015$suicides_no, digits = 1)
pie(year2015$suicides_no, labels = label, col = rainbow(length(year2015$suicides_no)), main = "Male Suicides by Country in 2015", sub = "Suicide Numbers of the Top 15 Countries for males between 25 and 34 years old", radius=0.6)
legend("left", legend=year2015$country, cex = 0.7,
fill = rainbow(length(year2015$country)))
Cat1<-rep("GroupA",10)  # for example GroupA can be Holland Tunnel
Cat2<-rep("GroupB",10)  # for example Group B will be Lincoln Tunnel
# vector of 20 values 10 of them A, 10 of them B
Cat1
Cat2
Cat<-c(Cat1,Cat2) # A variable with first 10 values GroupA and next 10 values GroupB
# concatenate values = 20 values
Cat
Val1<-rnorm(10,mean=25, sd=10) #say, traffic volume in Holland T as normal distribution with mean and sd
Val2<-rnorm(10,mean=30, sd=10) #say, traffic volume in Lincoln T as normal distribution with mean and sd
Val<-c(Val1,Val2) #A variable with 20 rows, with first 10 rows containing 10 random normal values of Val1 #and the next 10 values of Val2
Val
d<-data.frame(Cat,Val)
Observed_Difference<-mean(d[d$Cat=='GroupA',2])-mean(d[d$Cat=='GroupB',2])
Observed_Difference
#Try changing mean and sd values. When you run this you will see that the difference is sometimes negative #or sometimes positive.
# null hypothesis is that there is no difference
PermutationTestSecond::Permutation(d, "Cat", "Val",100000, "GroupA", "GroupB")
Val1<-rnorm(10,mean=25, sd=5) #say, traffic volume in Holland T as normal distribution with mean and sd
Val2<-rnorm(10,mean=30, sd=5) #say, traffic volume in Lincoln T as normal distribution with mean and sd
Val<-c(Val1,Val2) #A variable with 20 rows, with first 10 rows containing 10 random normal values of Val1 #and the next 10 values of Val2
Val
d<-data.frame(Cat,Val)
Observed_Difference<-mean(d[d$Cat=='GroupA',2])-mean(d[d$Cat=='GroupB',2])
Observed_Difference
#Try changing mean and sd values. When you run this you will see that the difference is sometimes negative #or sometimes positive.
# null hypothesis is that there is no difference
PermutationTestSecond::Permutation(d, "Cat", "Val",100000, "GroupA", "GroupB")
#Try changing mean and sd values. When you run this you will see that the difference is sometimes negative #or sometimes positive.
# null hypothesis is that there is no difference
PermutationTestSecond::Permutation(d, "Cat", "Val",1000, "GroupA", "GroupB")
Val1<-rnorm(10,mean=25, sd=10) #say, traffic volume in Holland T as normal distribution with mean and sd
Val2<-rnorm(10,mean=30, sd=10) #say, traffic volume in Lincoln T as normal distribution with mean and sd
Val<-c(Val1,Val2) #A variable with 20 rows, with first 10 rows containing 10 random normal values of Val1 #and the next 10 values of Val2
Val
d<-data.frame(Cat,Val)
Observed_Difference<-mean(d[d$Cat=='GroupA',2])-mean(d[d$Cat=='GroupB',2])
Observed_Difference
#Try changing mean and sd values. When you run this you will see that the difference is sometimes negative #or sometimes positive.
# null hypothesis is that there is no difference
PermutationTestSecond::Permutation(d, "Cat", "Val",1000, "GroupA", "GroupB")
Val1<-rnorm(10,mean=40, sd=10) #say, traffic volume in Holland T as normal distribution with mean and sd
Val2<-rnorm(10,mean=30, sd=10) #say, traffic volume in Lincoln T as normal distribution with mean and sd
Val<-c(Val1,Val2) #A variable with 20 rows, with first 10 rows containing 10 random normal values of Val1 #and the next 10 values of Val2
Val
d<-data.frame(Cat,Val)
Observed_Difference<-mean(d[d$Cat=='GroupA',2])-mean(d[d$Cat=='GroupB',2])
Observed_Difference
#Try changing mean and sd values. When you run this you will see that the difference is sometimes negative #or sometimes positive.
# null hypothesis is that there is no difference
PermutationTestSecond::Permutation(d, "Cat", "Val",1000, "GroupA", "GroupB")
Val1<-rnorm(10,mean=60, sd=10) #say, traffic volume in Holland T as normal distribution with mean and sd
Val2<-rnorm(10,mean=30, sd=10) #say, traffic volume in Lincoln T as normal distribution with mean and sd
Val<-c(Val1,Val2) #A variable with 20 rows, with first 10 rows containing 10 random normal values of Val1 #and the next 10 values of Val2
Val
d<-data.frame(Cat,Val)
Observed_Difference<-mean(d[d$Cat=='GroupA',2])-mean(d[d$Cat=='GroupB',2])
Observed_Difference
#Try changing mean and sd values. When you run this you will see that the difference is sometimes negative #or sometimes positive.
# null hypothesis is that there is no difference
PermutationTestSecond::Permutation(d, "Cat", "Val",1000, "GroupA", "GroupB")
Observed_Difference<-mean(d[d$Cat=='GroupA',2])-mean(d[d$Cat=='GroupB',2])
Observed_Difference
Observed_Difference<-mean(d[d$Cat=='GroupA',2])-mean(d[d$Cat=='GroupB',2])
Observed_Difference
#Try changing mean and sd values. When you run this you will see that the difference is sometimes negative #or sometimes positive.
# null hypothesis is that there is no difference
PermutationTestSecond::Permutation(d, "Cat", "Val",1000, "GroupA", "GroupB")
Val1<-rnorm(10,mean=20, sd=10) #say, traffic volume in Holland T as normal distribution with mean and sd
Val2<-rnorm(10,mean=30, sd=10) #say, traffic volume in Lincoln T as normal distribution with mean and sd
Val<-c(Val1,Val2) #A variable with 20 rows, with first 10 rows containing 10 random normal values of Val1 #and the next 10 values of Val2
Val
d<-data.frame(Cat,Val)
Observed_Difference<-mean(d[d$Cat=='GroupA',2])-mean(d[d$Cat=='GroupB',2])
Observed_Difference
#Try changing mean and sd values. When you run this you will see that the difference is sometimes negative #or sometimes positive.
# null hypothesis is that there is no difference
PermutationTestSecond::Permutation(d, "Cat", "Val",1000, "GroupA", "GroupB")
Val1<-rnorm(10,mean=10, sd=10) #say, traffic volume in Holland T as normal distribution with mean and sd
Val2<-rnorm(10,mean=30, sd=20) #say, traffic volume in Lincoln T as normal distribution with mean and sd
Val<-c(Val1,Val2) #A variable with 20 rows, with first 10 rows containing 10 random normal values of Val1 #and the next 10 values of Val2
Val
d<-data.frame(Cat,Val)
Observed_Difference<-mean(d[d$Cat=='GroupA',2])-mean(d[d$Cat=='GroupB',2])
Observed_Difference
#Try changing mean and sd values. When you run this you will see that the difference is sometimes negative #or sometimes positive.
# null hypothesis is that there is no difference
PermutationTestSecond::Permutation(d, "Cat", "Val",1000, "GroupA", "GroupB")
firstName <- c("Ethan", "John", "Selina")
lastName <- c("Hunt", "Whick", "Kyle")
sex <- c("MALE", "MALE", "FEMALE")
score <- c(97, 88, 85)
stu_df1 <- data.frame(firstName, lastName, sex, score)
stu_df1
#preparing another data frame with 3 rows
surName <- c("Hunt", "Whick", "Kyle")
hairColor <- c("Black", "Black", "Red")
age <- c(40, 42, 24)
stu_df2 <- data.frame(surName, hairColor, age)
stu_df2
cbind(stu_df1,stu_df2)
file1 <- data.frame(name=c("Peter","John","Robin"), skill=c(2,1,7))
file2 <- data.frame(name=c("Peter","Robin","Mike"),skill=c(3,1,4))
merge(file1,file2,by=c("name"))
merge(file1,file2,by=c("name"),all.x=TRUE)
file1 <- data.frame(name=c("Petter","John","Robin"), skill=c(2,1,7))
file2 <- data.frame(name=c("Petter","Robin","Mike"),skill=c(3,1,4))
rbind(file1,file2)
merge(file1,file2,by.x="name", by.y="surname")
file1 <- data.frame(name=c("Peter","John","Robin"), skill=c(2,1,7))
file2 <- data.frame(surname=c("Peter","Robin","Mike"),skill=c(3,1,4))
merge(file1,file2,by.x="name", by.y="surname")
file1 <- data.frame(name=c("Peter","John","Robin"), skill=c(2,1,7))
file2 <- data.frame(surname=c("P","Ro","M"),skill=c(3,1,4))
merge(file1,file2,by.x="name", by.y="surname")
moody <- read.csv("https://raw.githubusercontent.com/kunal0895/RDatasets/master/Moody2018.csv")
moody[,8] <- ""
moody[moody$GRADE=="F",8] <- "fail"
moody <- read.csv("https://raw.githubusercontent.com/kunal0895/RDatasets/master/Moody2018.csv")
moody[,8] <- ""
moody[moody$GRADE=="F",8] <- "fail"
#"==" is a judgement sign, if grade is equal to "F", then we consider it as "fail"
moody[1:20,1:8]
#"==" is a judgement sign, if grade is equal to "F", then we consider it as "fail"
moody[1:20]
#"==" is a judgement sign, if grade is equal to "F", then we consider it as "fail"
moody[1:3]
View(moody)
u <- c(1:10)
u
u <- c(1:10)
w <- c(1,-1,3)
u[w>0]
w
u[w>1]
u[w>2]
moody <- read.csv("https://raw.githubusercontent.com/kunal0895/RDatasets/master/Moody2018.csv")
View(moody)
moody[,8] <- ""
moody[,8] <- " "
moody[moody$GRADE=="F",8] <- "fail"
moody[,moody$GRADE=="F",8] <- "fail"
moody <- read.csv("https://raw.githubusercontent.com/kunal0895/RDatasets/master/Moody2018.csv")
View(moody)
moody <- read.csv("https://raw.githubusercontent.com/kunal0895/RDatasets/master/Moody2018.csv")
View(moody)
moody[,6] <- " "
moody
moody[moody$GRADE=="F",6] <- "fail"
moody
moody[moody$GRADE!="F",6] <- "pass"
moody
moody[1,2]
moody[1,]
moody[1,2]
moody[1,1]
moody[1,4]
moody[,4]
moody[1:2,3:4]
moody[,c(3,4)]
moody[c(3,4)]
moody[c(3,4)]
moody[3:4]
moody[2]
u <- c(1,"2",3)
u
u <- c(1,T,3)
u
u <- c("1",T,3)
u
moody[,2:1]
moody[,"GRADE"]
moody["GRADE",]
moody[10]
moody[0]
moody[10]
moody[2]
moody[,2]
what <- moody[moody$GRADE == "f"]
what
table(moody$TEXTING_IN_CLASS, moody$DOZES_OFF)
table(moody$SCORE, moody$DOZES_OFF)
what <- moody[moody$GRADE == "f"]
what
u[w]
u[w>-1]
u[w>-1]
u[w>0]
u <- c(1:10)
w <- c(1,-1,3)
u[w>0]
u[w>-1]
t<- data.frame(x=c(1,2,3),y=(3,2,1), z=x("a","b","c"))
t<- data.frame(x=c(1,2,3), y=c(3,2,1), z=x("a","b","c"))
t<- data.frame(x=c(1,2,3), y=c(3,2,1), z=c("a","b","c"))
t[1,]
t[,2:1]
moody[,c(1,2)]
moody[c(1,2)]
moody[,c(1,2)]
t[,t$y==2]
t[,t$y==1]
t[,t$y==2]
t<- data.frame(x=c(1,2,3), y=c(4,2,1), z=c("a","b","c"))
t[,t$y==2]
t[,t$y==1]
t[,t$y==3]
t[,t$y==0]
t[,t$y==2]
t[,t$y=1]
t[,t$y=1]
t[,t$y==1]
t[,t$y==3]
t<- data.frame(x=c(1,2,3), y=c(1,2,1), z=c("a","b","c"))
t[,t$y==1]
t<- data.frame(x=c(1,2,3), y=c(3,2,1), z=c("a","b","c"))
t[,t$y==1]
t[,t$y==2]
t[,t$y==1]
t
t[,t$y==1]
t<- data.frame(x=c(1,2,3), y=c(3,2,1), z=c("a","b","c"),  r=c("b","b","b"))
t
t[,t$y==1]
t[,t$y==3]
t[,t$x==3]
t[,t$x==4]
t[,t$x==3]
t[1:2,]
t[1,]
t[,2]
t[,t$z==3]
t[,t$z=="a"]
t[,t$z=="z"]
t<- data.frame(x=c(1,2,4), y=c(3,2,1), z=c("a","b","c"),  r=c("b","b","b"))
t[,t$x=="z"]
t[,t$x=="4"]
t[,t$x=="3"]
t[,t$x==3]
t[,t$x==2]
t[,t$y==2]
t[,t$z==2]
t[,t$x==1]
t[,t$x]
t[,t$x==1]
t[,t$y==1]
t[,t$x==2]
t[,t$y==1]
t<- data.frame(x=c(1,2,3), y=c(3,2,1), z=c("a","b","c"),  r=c("r","b","b"))
t[,t$y==1]
moody(,moody$GRADE=2)
moody(,moody$GRADE==2)
moody <- read.csv("https://raw.githubusercontent.com/kunal0895/RDatasets/master/Moody2018.csv")
moody(,moody$GRADE==2)
moody[,moody$GRADE==2]
moody[,moody$GRADE==1]
View(moody)
moody[,moody$SCORE==2]
moody[,moody$SCORE==1]
t[,t$x==1]
t[,t$y==2]
t[,t$z==3]
setwd('OneDrive/Documents/Freshman\ S2/Data101/Data101Code/12thAssignment-PredictRevenue/')
library(readr)
data <- read.csv('P5_train1.csv', sep = ",")
#RPART
library(rpart)
library(rpart.plot)
tree <- rpart(Revenue~.,data=data, control = rpart.control(cp = 0.0001))
rpart.plot(tree)
p =  predict(tree, newdata = data)
for(i in seq(1, 21, by = 1)) {
sub = data[data$Source == "GoogleSearch" & data$Duration > 37 & data$Activity == i,]
model.lm <- lm(Revenue~ Duration, data = sub)
pred =  predict(model.lm, newdata = sub)
p[data$Source == "GoogleSearch" & data$Duration > 37 & data$Activity == i] = pred
}
mean((p-data$Revenue)^2)
split_ratio
split_ratio
split_ratio <- 0.75
sample_size <- floor(split_ratio * nrow(data))
iteration <- 10
all_errors <- c()
for (val in c(1:iteration)){
train_ind <- sample(seq_len(nrow(data)), size = sample_size)
train <- data[train_ind, ]
test <- data[-train_ind, ]
tree <- rpart(Revenue~., data = train)
p <- predict(tree,test)
length(p)
for(i in seq(1, 21, by = 1)) {
sub = train[train$Source == "GoogleSearch" & train$Duration > 37 & train$Activity == i,]
model.lm <- lm(Revenue~ Duration, data = sub)
subTEST = test[test$Source == "GoogleSearch" & test$Duration > 37 & test$Activity == i,]
pred =  predict(model.lm, newdata = subTEST)
dim(pred)
dim(test[test$Source == "GoogleSearch" & test$Duration > 37 & test$Activity == i,])
p[test$Source == "GoogleSearch" & test$Duration > 37 & test$Activity == i] = pred
}
MSE <- mean((p-test$Revenue)^2)
print(MSE)
all_errors <- c(all_errors, MSE)
}
print(all_errors)
#RPART
library(rpart)
library(rpart.plot)
tree <- rpart(Revenue~.,data=data, control = rpart.control(cp = 1))
rpart.plot(tree)
p =  predict(tree, newdata = data)
#RPART
library(rpart)
library(rpart.plot)
tree <- rpart(Revenue~.,data=data, control = rpart.control(cp = 1))
rpart.plot(tree)
rpart
rpart
library(rpart.plot)
tree <- rpart(Revenue~.,data=data, control = rpart.control(cp = 0.5))
rpart.plot(tree)
p =  predict(tree, newdata = data)
library(rpart.plot)
tree <- rpart(Revenue~.,data=data, control = rpart.control(cp = 0.01))
rpart.plot(tree)
library(rpart.plot)
tree <- rpart(Revenue~.,data=data, control = rpart.control(cp = 0.001))
rpart.plot(tree)
p =  predict(tree, newdata = data)
mean((p-data$Revenue)^2)
for(i in seq(1, 21, by = 1)) {
sub = data[data$Source == "GoogleSearch" & data$Duration > 37 & data$Activity == i,]
model.lm <- lm(Revenue~ Duration, data = sub)
pred =  predict(model.lm, newdata = sub)
p[data$Source == "GoogleSearch" & data$Duration > 37 & data$Activity == i] = pred
}
mean((p-data$Revenue)^2)
#RPART
library(rpart)
library(rpart.plot)
tree <- rpart(Revenue~.,data=data, control = rpart.control(cp = 0.00001))
rpart.plot(tree)
p =  predict(tree, newdata = data)
for(i in seq(1, 21, by = 1)) {
sub = data[data$Source == "GoogleSearch" & data$Duration > 37 & data$Activity == i,]
model.lm <- lm(Revenue~ Duration, data = sub)
pred =  predict(model.lm, newdata = sub)
p[data$Source == "GoogleSearch" & data$Duration > 37 & data$Activity == i] = pred
}
mean((p-data$Revenue)^2)
#RPART
library(rpart)
library(rpart.plot)
tree <- rpart(Revenue~.,data=data, control = rpart.control(cp = 0))
rpart.plot(tree)
for(i in seq(1, 21, by = 1)) {
sub = data[data$Source == "GoogleSearch" & data$Duration > 37 & data$Activity == i,]
model.lm <- lm(Revenue~ Duration, data = sub)
pred =  predict(model.lm, newdata = sub)
p[data$Source == "GoogleSearch" & data$Duration > 37 & data$Activity == i] = pred
}
mean((p-data$Revenue)^2)
